name: master-cicd
on: 
  push:
    branches:
      - main
      - feature1/test
  pull_request:
    types: 
    - opened
    - closed
  workflow_dispatch:
env:
  DOCKER_USERNAME: kanand
jobs:
    build:
        runs-on: ubuntu-latest
        steps:
        - name: code checkout
          uses: actions/checkout@v4 
        - name: copying some content
          run: echo "master cicd,python,terraform and kubernetes kumar" > kumar_target.sh
        - name: build docker images
          run: echo "docker build -t  ${{ env.DOCKER_USERNAME }}:latest ."
        - name:  defining organisation,environment or repository level variable and using it
          run: echo "i have to master ${{ vars.DEVOPS }} properly and urgently"
        - name: view github context
          env:
            GITHUB_CONTEXT: ${{ toJson(github) }}
          run: echo "$GITHUB_CONTEXT"
      #  - name: upload artifact to be available in other jobs
       #   uses: actions/upload-artifact@v4
        #  with:
         #   name: kumars_aim
          #  path: kumar_target.sh
    test:
        if: github.ref == 'refs/heads/feature1/test'
        needs: build
        strategy:
          fail-fast: false
          max-parallel: 3
          matrix:
            os: [ubuntu-latest, ubuntu-20.04t]
            images: [hello-world]
         #   exclude: 
          #    - images: alpine
           #     os: windows-latest
          #  include:
           #   - images: nginx
            #    os: ubuntu-latest
        runs-on: ${{ matrix.os}}
        steps:
        #    - name: download the artifact
         #     uses: actions/download-artifact@v4
          #    with:
           #     name: kumars_aim
            - name: list and check files
              run: docker info
            - name: test docker ${{ matrix.images }} container on ${{ matrix.os }}
              run: docker run ${{ matrix.images }}
              
    
   # deploy:
    #    needs: test
     #   runs-on: ubuntu-latest
      #  concurrency:
       #     group: mydemo
        #    cancel-in-progress: false
        #steps:
         #   - name: download the artifact
          #    uses: actions/download-artifact@v4
           #   with:
            #    name: kumars_aim
         #   - name: print content of the file
          #    timeout-minutes: 1
           #   run: sleep 300s
